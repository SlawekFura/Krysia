/*
 * Generated by gdbus-codegen 2.58.3 from dbus.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __DBUS_MGR_GEN_H__
#define __DBUS_MGR_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for test.signal.ObjectManager.My_Object */

#define EXAMPLE_TYPE_MY__OBJECT (example_my__object_get_type ())
#define EXAMPLE_MY__OBJECT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_MY__OBJECT, ExampleMy_Object))
#define EXAMPLE_IS_MY__OBJECT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_MY__OBJECT))
#define EXAMPLE_MY__OBJECT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), EXAMPLE_TYPE_MY__OBJECT, ExampleMy_ObjectIface))

struct _ExampleMy_Object;
typedef struct _ExampleMy_Object ExampleMy_Object;
typedef struct _ExampleMy_ObjectIface ExampleMy_ObjectIface;

struct _ExampleMy_ObjectIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_math_op) (
    ExampleMy_Object *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_increment,
    gboolean arg_decrement);

  const gchar * (*get_description) (ExampleMy_Object *object);

  const gchar * (*get_foo) (ExampleMy_Object *object);

  void (*inform_about_intent) (
    ExampleMy_Object *object,
    const gchar *arg_info);

  const gchar * (*get_bar) (ExampleMy_Object *object);

};

GType example_my__object_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *example_my__object_interface_info (void);
guint example_my__object_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void example_my__object_complete_math_op (
    ExampleMy_Object *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void example_my__object_emit_inform_about_intent (
    ExampleMy_Object *object,
    const gchar *arg_info);



/* D-Bus method calls: */
void example_my__object_call_math_op (
    ExampleMy_Object *proxy,
    gboolean arg_increment,
    gboolean arg_decrement,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean example_my__object_call_math_op_finish (
    ExampleMy_Object *proxy,
    GAsyncResult *res,
    GError **error);

gboolean example_my__object_call_math_op_sync (
    ExampleMy_Object *proxy,
    gboolean arg_increment,
    gboolean arg_decrement,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *example_my__object_get_description (ExampleMy_Object *object);
gchar *example_my__object_dup_description (ExampleMy_Object *object);
void example_my__object_set_description (ExampleMy_Object *object, const gchar *value);

const gchar *example_my__object_get_foo (ExampleMy_Object *object);
gchar *example_my__object_dup_foo (ExampleMy_Object *object);
void example_my__object_set_foo (ExampleMy_Object *object, const gchar *value);

const gchar *example_my__object_get_bar (ExampleMy_Object *object);
gchar *example_my__object_dup_bar (ExampleMy_Object *object);
void example_my__object_set_bar (ExampleMy_Object *object, const gchar *value);


/* ---- */

#define EXAMPLE_TYPE_MY__OBJECT_PROXY (example_my__object_proxy_get_type ())
#define EXAMPLE_MY__OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_MY__OBJECT_PROXY, ExampleMy_ObjectProxy))
#define EXAMPLE_MY__OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_MY__OBJECT_PROXY, ExampleMy_ObjectProxyClass))
#define EXAMPLE_MY__OBJECT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_MY__OBJECT_PROXY, ExampleMy_ObjectProxyClass))
#define EXAMPLE_IS_MY__OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_MY__OBJECT_PROXY))
#define EXAMPLE_IS_MY__OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_MY__OBJECT_PROXY))

typedef struct _ExampleMy_ObjectProxy ExampleMy_ObjectProxy;
typedef struct _ExampleMy_ObjectProxyClass ExampleMy_ObjectProxyClass;
typedef struct _ExampleMy_ObjectProxyPrivate ExampleMy_ObjectProxyPrivate;

struct _ExampleMy_ObjectProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ExampleMy_ObjectProxyPrivate *priv;
};

struct _ExampleMy_ObjectProxyClass
{
  GDBusProxyClass parent_class;
};

GType example_my__object_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleMy_ObjectProxy, g_object_unref)
#endif

void example_my__object_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleMy_Object *example_my__object_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleMy_Object *example_my__object_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void example_my__object_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleMy_Object *example_my__object_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleMy_Object *example_my__object_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define EXAMPLE_TYPE_MY__OBJECT_SKELETON (example_my__object_skeleton_get_type ())
#define EXAMPLE_MY__OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_MY__OBJECT_SKELETON, ExampleMy_ObjectSkeleton))
#define EXAMPLE_MY__OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_MY__OBJECT_SKELETON, ExampleMy_ObjectSkeletonClass))
#define EXAMPLE_MY__OBJECT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_MY__OBJECT_SKELETON, ExampleMy_ObjectSkeletonClass))
#define EXAMPLE_IS_MY__OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_MY__OBJECT_SKELETON))
#define EXAMPLE_IS_MY__OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_MY__OBJECT_SKELETON))

typedef struct _ExampleMy_ObjectSkeleton ExampleMy_ObjectSkeleton;
typedef struct _ExampleMy_ObjectSkeletonClass ExampleMy_ObjectSkeletonClass;
typedef struct _ExampleMy_ObjectSkeletonPrivate ExampleMy_ObjectSkeletonPrivate;

struct _ExampleMy_ObjectSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ExampleMy_ObjectSkeletonPrivate *priv;
};

struct _ExampleMy_ObjectSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType example_my__object_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleMy_ObjectSkeleton, g_object_unref)
#endif

ExampleMy_Object *example_my__object_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for test.signal.ObjectManager.Another */

#define EXAMPLE_TYPE_ANOTHER (example_another_get_type ())
#define EXAMPLE_ANOTHER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_ANOTHER, ExampleAnother))
#define EXAMPLE_IS_ANOTHER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_ANOTHER))
#define EXAMPLE_ANOTHER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), EXAMPLE_TYPE_ANOTHER, ExampleAnotherIface))

struct _ExampleAnother;
typedef struct _ExampleAnother ExampleAnother;
typedef struct _ExampleAnotherIface ExampleAnotherIface;

struct _ExampleAnotherIface
{
  GTypeInterface parent_iface;
};

GType example_another_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *example_another_interface_info (void);
guint example_another_override_properties (GObjectClass *klass, guint property_id_begin);


/* ---- */

#define EXAMPLE_TYPE_ANOTHER_PROXY (example_another_proxy_get_type ())
#define EXAMPLE_ANOTHER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_ANOTHER_PROXY, ExampleAnotherProxy))
#define EXAMPLE_ANOTHER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_ANOTHER_PROXY, ExampleAnotherProxyClass))
#define EXAMPLE_ANOTHER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_ANOTHER_PROXY, ExampleAnotherProxyClass))
#define EXAMPLE_IS_ANOTHER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_ANOTHER_PROXY))
#define EXAMPLE_IS_ANOTHER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_ANOTHER_PROXY))

typedef struct _ExampleAnotherProxy ExampleAnotherProxy;
typedef struct _ExampleAnotherProxyClass ExampleAnotherProxyClass;
typedef struct _ExampleAnotherProxyPrivate ExampleAnotherProxyPrivate;

struct _ExampleAnotherProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ExampleAnotherProxyPrivate *priv;
};

struct _ExampleAnotherProxyClass
{
  GDBusProxyClass parent_class;
};

GType example_another_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleAnotherProxy, g_object_unref)
#endif

void example_another_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleAnother *example_another_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleAnother *example_another_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void example_another_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleAnother *example_another_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleAnother *example_another_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define EXAMPLE_TYPE_ANOTHER_SKELETON (example_another_skeleton_get_type ())
#define EXAMPLE_ANOTHER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_ANOTHER_SKELETON, ExampleAnotherSkeleton))
#define EXAMPLE_ANOTHER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_ANOTHER_SKELETON, ExampleAnotherSkeletonClass))
#define EXAMPLE_ANOTHER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_ANOTHER_SKELETON, ExampleAnotherSkeletonClass))
#define EXAMPLE_IS_ANOTHER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_ANOTHER_SKELETON))
#define EXAMPLE_IS_ANOTHER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_ANOTHER_SKELETON))

typedef struct _ExampleAnotherSkeleton ExampleAnotherSkeleton;
typedef struct _ExampleAnotherSkeletonClass ExampleAnotherSkeletonClass;
typedef struct _ExampleAnotherSkeletonPrivate ExampleAnotherSkeletonPrivate;

struct _ExampleAnotherSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ExampleAnotherSkeletonPrivate *priv;
};

struct _ExampleAnotherSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType example_another_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleAnotherSkeleton, g_object_unref)
#endif

ExampleAnother *example_another_skeleton_new (void);


/* ---- */

#define EXAMPLE_TYPE_OBJECT (example_object_get_type ())
#define EXAMPLE_OBJECT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_OBJECT, ExampleObject))
#define EXAMPLE_IS_OBJECT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_OBJECT))
#define EXAMPLE_OBJECT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), EXAMPLE_TYPE_OBJECT, ExampleObject))

struct _ExampleObject;
typedef struct _ExampleObject ExampleObject;
typedef struct _ExampleObjectIface ExampleObjectIface;

struct _ExampleObjectIface
{
  GTypeInterface parent_iface;
};

GType example_object_get_type (void) G_GNUC_CONST;

ExampleMy_Object *example_object_get_my__object (ExampleObject *object);
ExampleAnother *example_object_get_another (ExampleObject *object);
ExampleMy_Object *example_object_peek_my__object (ExampleObject *object);
ExampleAnother *example_object_peek_another (ExampleObject *object);

#define EXAMPLE_TYPE_OBJECT_PROXY (example_object_proxy_get_type ())
#define EXAMPLE_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_OBJECT_PROXY, ExampleObjectProxy))
#define EXAMPLE_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_OBJECT_PROXY, ExampleObjectProxyClass))
#define EXAMPLE_OBJECT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_OBJECT_PROXY, ExampleObjectProxyClass))
#define EXAMPLE_IS_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_OBJECT_PROXY))
#define EXAMPLE_IS_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_OBJECT_PROXY))

typedef struct _ExampleObjectProxy ExampleObjectProxy;
typedef struct _ExampleObjectProxyClass ExampleObjectProxyClass;
typedef struct _ExampleObjectProxyPrivate ExampleObjectProxyPrivate;

struct _ExampleObjectProxy
{
  /*< private >*/
  GDBusObjectProxy parent_instance;
  ExampleObjectProxyPrivate *priv;
};

struct _ExampleObjectProxyClass
{
  GDBusObjectProxyClass parent_class;
};

GType example_object_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleObjectProxy, g_object_unref)
#endif

ExampleObjectProxy *example_object_proxy_new (GDBusConnection *connection, const gchar *object_path);

#define EXAMPLE_TYPE_OBJECT_SKELETON (example_object_skeleton_get_type ())
#define EXAMPLE_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_OBJECT_SKELETON, ExampleObjectSkeleton))
#define EXAMPLE_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_OBJECT_SKELETON, ExampleObjectSkeletonClass))
#define EXAMPLE_OBJECT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_OBJECT_SKELETON, ExampleObjectSkeletonClass))
#define EXAMPLE_IS_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_OBJECT_SKELETON))
#define EXAMPLE_IS_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_OBJECT_SKELETON))

typedef struct _ExampleObjectSkeleton ExampleObjectSkeleton;
typedef struct _ExampleObjectSkeletonClass ExampleObjectSkeletonClass;
typedef struct _ExampleObjectSkeletonPrivate ExampleObjectSkeletonPrivate;

struct _ExampleObjectSkeleton
{
  /*< private >*/
  GDBusObjectSkeleton parent_instance;
  ExampleObjectSkeletonPrivate *priv;
};

struct _ExampleObjectSkeletonClass
{
  GDBusObjectSkeletonClass parent_class;
};

GType example_object_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleObjectSkeleton, g_object_unref)
#endif

ExampleObjectSkeleton *example_object_skeleton_new (const gchar *object_path);
void example_object_skeleton_set_my__object (ExampleObjectSkeleton *object, ExampleMy_Object *interface_);
void example_object_skeleton_set_another (ExampleObjectSkeleton *object, ExampleAnother *interface_);

/* ---- */

#define EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT (example_object_manager_client_get_type ())
#define EXAMPLE_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT, ExampleObjectManagerClient))
#define EXAMPLE_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT, ExampleObjectManagerClientClass))
#define EXAMPLE_OBJECT_MANAGER_CLIENT_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT, ExampleObjectManagerClientClass))
#define EXAMPLE_IS_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT))
#define EXAMPLE_IS_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_OBJECT_MANAGER_CLIENT))

typedef struct _ExampleObjectManagerClient ExampleObjectManagerClient;
typedef struct _ExampleObjectManagerClientClass ExampleObjectManagerClientClass;
typedef struct _ExampleObjectManagerClientPrivate ExampleObjectManagerClientPrivate;

struct _ExampleObjectManagerClient
{
  /*< private >*/
  GDBusObjectManagerClient parent_instance;
  ExampleObjectManagerClientPrivate *priv;
};

struct _ExampleObjectManagerClientClass
{
  GDBusObjectManagerClientClass parent_class;
};

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleObjectManagerClient, g_object_unref)
#endif

GType example_object_manager_client_get_type (void) G_GNUC_CONST;

GType example_object_manager_client_get_proxy_type (GDBusObjectManagerClient *manager, const gchar *object_path, const gchar *interface_name, gpointer user_data);

void example_object_manager_client_new (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *example_object_manager_client_new_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *example_object_manager_client_new_sync (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);

void example_object_manager_client_new_for_bus (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *example_object_manager_client_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *example_object_manager_client_new_for_bus_sync (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);


G_END_DECLS

#endif /* __DBUS_MGR_GEN_H__ */
